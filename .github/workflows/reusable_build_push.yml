name: build image and push to registry

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        description: "The name of docker image, without version part."
        required: true
        type: string
      CONTEXT:
        description: "The context of docker build."
        required: true
        type: string
      DOCKERFILE:
        description: "The path of Dockerfile."
        required: true
        type: string
      environment:
        description: "name of the environment"
        required: true
        type: string
    secrets:
      REGISTRY_USERNAME:
        description: "The username of the container registry."
      REGISTRY_PASSWORD:
        description: "The password of the container registry."

jobs:
  build-push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download version_history.json artifact
        uses: actions/download-artifact@v2
        with:
          name: version_history
          path: ./

      - name: Show version_history.json
        run: |
          echo "Contents of version_history.json:"
          cat ./version_history.json

      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.CONTEXT }}
          file: ${{ inputs.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}:latest
          cache-to: type=inline
